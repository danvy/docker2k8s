apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-web
  labels:
    app: app-web
    project: app
    part: web
    version: {{ .Values.web.image.tag }}
spec:
  selector:
    matchLabels:
      app: app-web
  replicas: {{ .Values.web.replicaCount | default 1 }}
  template:
    metadata:
      labels:
        app: app-web
        project: app
        version: {{ .Values.web.image.tag }}
    spec:
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchExpressions:
              - key: app
                operator: In
                values:
                - app
              - key: part
                operator: In
                values:
                - web
      containers:
        - name: web
          image: "{{ .Values.web.image.repository }}:{{ .Values.web.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.web.image.pullPolicy | default "IfNotPresent" }}
          resources:
            requests:
              memory: '256Mi'
              cpu: '125m'
            limits:
              memory: '512Mi'
              cpu: '1000m'
          ports:
            - name: http
              containerPort: 80
            - name: https
              containerPort: 443
          readinessProbe:
            httpGet:
              path: /health
              scheme: HTTP
              port: http
            initialDelaySeconds: 10
            failureThreshold: 10
            periodSeconds: 10
            timeoutSeconds: 3
            successThreshold: 1
          livenessProbe:
            httpGet:
              path: /health
              scheme: HTTP
              port: http
            initialDelaySeconds: 10
            failureThreshold: 10
            periodSeconds: 10
            timeoutSeconds: 3
            successThreshold: 1
